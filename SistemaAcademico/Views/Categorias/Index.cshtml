@model Paginacion<SistemaAcademico.Models.Categoria>

@{
    ViewData["Title"] = "Index";
}

<h2>Categoría Cursos</h2>

<p>

    <a asp-action="Create"><button class="btn btn-primary">Crear nueva categoría</button></a>
</p>


<form asp-action="Index" class="form-inline" method="get">
    <div class="form-group">
        <label for="searchString">Filtro:</label>
        <input type="text" class="form-control" id="searchString" name="searchString" value="@ViewData["CurrentFilter"]">
    </div>
    <button type="submit" class="btn btn-default">Buscar</button>
    <a asp-action="Index">Eliminar filtro</a> | Núm. de Registros @Model.TotalR
</form>

<table class="table">
    <thead>
        <tr>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["NombreSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Nombre</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["DescripcionSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Descripcion</a>
            </th>
            <th>
                <a asp-action="Index" asp-route-sortOrder="@ViewData["EstadoSortParm"]" asp-route-currentFilter="@ViewData["CurrentFilter"]">Estado</a>
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Nombre)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Descripcion)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.Estado)
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.CategoriaID">Editar</a> |
                    <a asp-action="Details" asp-route-id="@item.CategoriaID">Detalles</a> |
                    <a asp-action="Delete" asp-route-id="@item.CategoriaID">Eliminar</a>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    var actualDisabled = "";
}
<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex - 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @prevDisabled">
    Anterior
</a>

@for (int i = 1; i <= Model.TotalPages; i++)
{
    if (Model.PageIndex == i) { actualDisabled = "active"; }
    else { actualDisabled = ""; }

    <a asp-action="Index"
       asp-route-sortOrder="@ViewData["CurrentSort"]"
       asp-route-page="@i"
       asp-route-currentFilter="@ViewData["CurrentFilter"]"
       class="btn btn-default @actualDisabled">
        @i
    </a>
}

<a asp-action="Index"
   asp-route-sortOrder="@ViewData["CurrentSort"]"
   asp-route-page="@(Model.PageIndex + 1)"
   asp-route-currentFilter="@ViewData["CurrentFilter"]"
   class="btn btn-default @nextDisabled">
    Siguiente
</a>

